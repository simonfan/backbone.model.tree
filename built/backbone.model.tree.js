//     backbone.model.tree
//     (c) simonfan
//     backbone.model.tree is licensed under the MIT terms.

define("backbone.model.tree",["require","exports","module","backbone","backbone.collection.queryable","lodash"],function(e,t,n){var s=e("backbone"),r=e("backbone.collection.queryable"),o=e("lodash"),c=r.extend({}),a=n.exports=s.Model.extend({Branches:c,extend:function(){var e=s.Model.extend.apply(this,arguments),t=c.extend({model:e});return e.prototype.Branches=t,e},initialize:function(){this.branches=new this.Branches},addBranch:function(){var e=this.branches.add.apply(this.branches,arguments);return e.ancestor=this,e},selectBranches:function(e){return this.branches.find(e)},selectSiblings:function(e){return this.isRoot()?[]:this.root.selectBranches(e)},selectDescendants:function(e){if(this.isLeaf())return!1;var t=this.selectBranches(e),n=this.branches.map(function(t){return t.selectDescendants(e)}).compact();return t.concat(n)},isLeaf:function(){return 0===this.branches.length},isRoot:function(){return o.isObject(this.ancestor)}});a.prototype.siblings=a.prototype.selectSiblings,a.prototype.descendants=a.prototype.selectDescendants,a.Branches=c,a.extend=a.prototype.extend,c.prototype.model=a});